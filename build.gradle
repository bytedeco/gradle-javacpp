plugins {
    id 'java-library'
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'signing'
}

group = 'org.bytedeco'
version = '1.5.10-SNAPSHOT'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

dependencies {
    api "org.bytedeco:javacpp:$version"
    testImplementation 'junit:junit:4.13.2'
}

gradlePlugin {
    // need to sign before publishing
    automatedPublishing = false
    plugins {
        build {
            id = 'org.bytedeco.gradle-javacpp-build'
            implementationClass = 'org.bytedeco.gradle.javacpp.BuildPlugin'
        }
        platform {
            id = 'org.bytedeco.gradle-javacpp-platform'
            implementationClass = 'org.bytedeco.gradle.javacpp.PlatformPlugin'
        }
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle JavaCPP',
                   'Implementation-Vendor': 'Bytedeco',
                   'Implementation-Version': project.version,
                   'Specification-Title': 'Gradle JavaCPP',
                   'Specification-Vendor': 'Bytedeco',
                   'Specification-Version': project.version
    }
}

javadoc {
    options.memberLevel = JavadocMemberLevel.PRIVATE
    options.links = ['https://docs.oracle.com/javase/8/docs/api',
                     'https://docs.gradle.org/current/javadoc',
                     'http://bytedeco.org/javacpp/apidocs',
                     'http://www.slf4j.org/apidocs',
                     'http://junit.org/junit4/javadoc/4.13.2']
}

//doesn't work with Gradle 5.x
//java {
//    withJavadocJar()
//    withSourcesJar()
//}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

def pomClosure = {
    name = 'Gradle JavaCPP'
    delegate.description = 'Gradle plugins to automate the build process of JavaCPP and JavaCV'
    url = 'http://bytedeco.org/gradle-javacpp/'
    licenses {
        license {
            name = 'Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0'
            distribution = 'repo'
        }
        license {
            name = 'GNU General Public License (GPL) version 2, or any later version'
            url = 'http://www.gnu.org/licenses/'
            distribution = 'repo'
        }
        license {
            name = 'GPLv2 with Classpath exception'
            url = 'http://www.gnu.org/software/classpath/license.html'
            distribution = 'repo'
        }
    }
    developers {
        developer {
            id = 'saudet'
            name = 'Samuel Audet'
            email = 'samuel.audet@gmail.com'
        }
    }
    scm {
        url = 'https://github.com/bytedeco/gradle-javacpp'
        connection = 'scm:git:git://github.com/bytedeco/gradle-javacpp.git'
        developerConnection = 'scm:git:ssh://git@github.com/bytedeco/gradle-javacpp.git'
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact javadocJar
            artifact sourcesJar
            pom pomClosure
        }
        buildPluginMarkerMaven(MavenPublication) {
            groupId gradlePlugin.plugins.build.id
            artifactId gradlePlugin.plugins.build.id + ".gradle.plugin"
            pom pomClosure
            pom.withXml {
                def dependency = asNode().appendNode('dependencies').appendNode('dependency')
                dependency.appendNode('groupId', group)
                dependency.appendNode('artifactId', rootProject.name)
                dependency.appendNode('version', version)
            }
        }
        platformPluginMarkerMaven(MavenPublication) {
            groupId gradlePlugin.plugins.platform.id
            artifactId gradlePlugin.plugins.platform.id + ".gradle.plugin"
            pom pomClosure
            pom.withXml {
                def dependency = asNode().appendNode('dependencies').appendNode('dependency')
                dependency.appendNode('groupId', group)
                dependency.appendNode('artifactId', rootProject.name)
                dependency.appendNode('version', version)
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username System.getenv('CI_DEPLOY_USERNAME')
                password System.getenv('CI_DEPLOY_PASSWORD')
            }
        }
    }
}

signing {
    useGpgCmd()
    if (!version.endsWith('SNAPSHOT')) {
        sign publishing.publications.mavenJava
        sign publishing.publications.buildPluginMarkerMaven
        sign publishing.publications.platformPluginMarkerMaven
    }
}

